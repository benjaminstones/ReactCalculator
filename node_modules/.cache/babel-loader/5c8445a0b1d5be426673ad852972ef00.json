{"ast":null,"code":"var _jsxFileName = \"/Users/benstones/Desktop/ReactApps/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Display from './Display';\nimport ButtonContainer from './ButtonContainer';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const evil = fn => {\n    return new Function('return ' + fn)();\n  };\n\n  const [answer, setAnswer] = useState('0');\n  const [firstInt, setFirstInt] = useState('0');\n  const [secondInt, setSecondInt] = useState('');\n  const [expression, setExpression] = useState('0');\n  const [operator, setOperator] = useState('');\n  useEffect(() => {\n    //ToDo - set expression to be firstint, operator, secondint\n    setExpression(firstInt.concat(operator, secondInt)); // console.log(firstInt, secondInt, operator)\n  }, [firstInt, secondInt, operator]);\n\n  const equate = (firstInt, secondInt, operator) => {\n    switch (operator) {\n      case '+':\n        return firstInt + secondInt;\n\n      case '-':\n        return firstInt - secondInt;\n\n      case '*':\n        return firstInt * secondInt;\n\n      case '/':\n        return firstInt / secondInt;\n    }\n  };\n  /*\n  calculator.net\n  \n  expression:\n  whenever we add a number or operator we append to it\n  when we press equals, this becomes the total\n  Displayed at TOP\n  \n  total:\n  Displayed at bottom\n  This becomes calculated \n  \n  \n  */\n\n\n  const handleClick = (buttonName, buttonType) => {\n    //if number\n    //if expression contains no operator\n    // set first int\n    //if expression contains operator\n    //set second int\n    //if operator\n    //setOperator\n    //if util\n    //cross that bridge when we get there\n    if (buttonType === 'num') {\n      if (expression.includes('+') || expression.includes('-') || expression.includes('*') || expression.includes('/')) {\n        if (secondInt === '0') {\n          setSecondInt(buttonName);\n        } else {\n          setSecondInt(secondInt.concat(buttonName));\n        }\n      } else {\n        if (firstInt === '0') {\n          setFirstInt(buttonName);\n        } else {\n          setFirstInt(firstInt.concat(buttonName));\n        }\n      }\n    } else if (buttonType === 'op' && buttonName !== '=') {\n      setOperator(buttonName);\n      console.log(operator);\n    } else if (buttonName === 'C') {\n      setFirstInt('0');\n      setSecondInt('');\n      setOperator('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calc-container\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      text: firstInt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      clickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bnTjwLd6C7uNd8yBtuldsJfxifk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Display","ButtonContainer","useState","useEffect","App","evil","fn","Function","answer","setAnswer","firstInt","setFirstInt","secondInt","setSecondInt","expression","setExpression","operator","setOperator","concat","equate","handleClick","buttonName","buttonType","includes","console","log"],"sources":["/Users/benstones/Desktop/ReactApps/calculator/src/App.js"],"sourcesContent":["import Display from './Display';\nimport ButtonContainer from './ButtonContainer';\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const evil = (fn) => {\n    return new Function('return ' + fn)();\n  }\n\n  const [answer, setAnswer] = useState('0');\n  const [firstInt, setFirstInt] = useState('0');\n  const [secondInt, setSecondInt] = useState('');\n  const [expression, setExpression] = useState('0');\n  const [operator, setOperator] = useState('');\n\n  useEffect(() => {\n    //ToDo - set expression to be firstint, operator, secondint\n    setExpression(firstInt.concat(operator, secondInt))\n    // console.log(firstInt, secondInt, operator)\n  }, [firstInt, secondInt, operator]);\n\n  const equate = (firstInt, secondInt, operator) => {\n    switch(operator) {\n      case '+':\n        return firstInt + secondInt;\n      case '-':\n        return firstInt - secondInt;\n      case '*':\n        return firstInt * secondInt;\n      case '/':\n        return firstInt / secondInt;\n        \n    }\n  }\n/*\ncalculator.net\n\nexpression:\nwhenever we add a number or operator we append to it\nwhen we press equals, this becomes the total\nDisplayed at TOP\n\ntotal:\nDisplayed at bottom\nThis becomes calculated \n\n\n*/\n  const handleClick = (buttonName, buttonType) => {\n    //if number\n    //if expression contains no operator\n    // set first int\n    //if expression contains operator\n    //set second int\n\n\n    //if operator\n    //setOperator\n\n    //if util\n    //cross that bridge when we get there\n    if (buttonType === 'num') {\n      if (expression.includes('+') || expression.includes('-') || expression.includes('*') || expression.includes('/')) {\n        if (secondInt === '0') {\n          setSecondInt(buttonName)\n        } else {\n          setSecondInt(secondInt.concat(buttonName));\n        }\n      } else {\n        if (firstInt === '0') {\n          setFirstInt(buttonName)\n        } else {\n          setFirstInt(firstInt.concat(buttonName))\n        }\n      }\n    } else if (buttonType === 'op' && buttonName !== '=') {\n      setOperator(buttonName);\n      console.log(operator);\n    } else if (buttonName === 'C') {\n      setFirstInt('0')\n      setSecondInt('')\n      setOperator('')\n    }\n\n    \n  };\n\n  return (\n    <div className='calc-container'>\n      <Display text={firstInt}/>\n      <Display text={expression}/>\n      <ButtonContainer clickHandler={handleClick}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}