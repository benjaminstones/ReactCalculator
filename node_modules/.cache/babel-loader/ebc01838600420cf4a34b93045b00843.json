{"ast":null,"code":"var _jsxFileName = \"/Users/benstones/Desktop/ReactApps/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Display from './Display';\nimport ButtonContainer from './ButtonContainer';\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const evil = fn => {\n    return new Function('return ' + fn)();\n  };\n\n  const [answer, setAnswer] = useState('0');\n  const [expression, setExpression] = useState('0');\n  const [operator, setOperator] = useState('');\n\n  const equate = (firstInt, secondInt, operator) => {\n    switch (operator) {\n      case '+':\n        return firstInt + secondInt;\n\n      case '-':\n        return firstInt - secondInt;\n\n      case '*':\n        return firstInt + secondInt;\n\n      case '/':\n        return firstInt + secondInt;\n    }\n  }; // const formEquation = (currentEq, mathToAppend) => {\n  //   let tempEq = text;\n  //   if (text === 0) {\n  //     setText(mathToAppend);\n  //   } else { \n  //     setText(tempEq.concat(mathToAppend));\n  //     console.log(text);\n  //   }\n  // }\n\n\n  const handleClick = (buttonName, buttonType) => {\n    if (buttonType === 'num') {\n      let tempEx = expression;\n      setExpression(tempEx.concat(buttonName));\n    } // if (buttonName === '=') {\n    //   setText(parseInt(evil(text)));\n    // } else if (buttonName === 'C'){\n    //   setText('0');\n    // } else {\n    //   formEquation(text, buttonName);\n    // }\n    // //setText(buttonName);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calc-container\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      text: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      clickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UPoAoLyUGDyvfxS61824OTPQ4o8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Display","ButtonContainer","useState","App","evil","fn","Function","answer","setAnswer","expression","setExpression","operator","setOperator","equate","firstInt","secondInt","handleClick","buttonName","buttonType","tempEx","concat"],"sources":["/Users/benstones/Desktop/ReactApps/calculator/src/App.js"],"sourcesContent":["import Display from './Display';\nimport ButtonContainer from './ButtonContainer';\nimport { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const evil = (fn) => {\n    return new Function('return ' + fn)();\n  }\n\n  const [answer, setAnswer] = useState('0');\n  const [expression, setExpression] = useState('0');\n  const [operator, setOperator] = useState('');\n\n  const equate = (firstInt, secondInt, operator) => {\n    switch(operator) {\n      case '+':\n        return firstInt + secondInt;\n      case '-':\n        return firstInt - secondInt;\n      case '*':\n        return firstInt + secondInt;\n      case '/':\n        return firstInt + secondInt;\n        \n    }\n  }\n  // const formEquation = (currentEq, mathToAppend) => {\n  //   let tempEq = text;\n  //   if (text === 0) {\n  //     setText(mathToAppend);\n  //   } else { \n  //     setText(tempEq.concat(mathToAppend));\n  //     console.log(text);\n  //   }\n  // }\n\n  const handleClick = (buttonName, buttonType) => {\n    if (buttonType === 'num') {\n      let tempEx = expression;\n      setExpression(tempEx.concat(buttonName))\n\n    }\n    // if (buttonName === '=') {\n    //   setText(parseInt(evil(text)));\n    // } else if (buttonName === 'C'){\n    //   setText('0');\n    // } else {\n    //   formEquation(text, buttonName);\n    // }\n    // //setText(buttonName);\n  };\n\n  return (\n    <div className='calc-container'>\n      <Display text={expression}/>\n      <Display text={expression}/>\n      <ButtonContainer clickHandler={handleClick}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAMC,IAAI,GAAIC,EAAD,IAAQ;IACnB,OAAO,IAAIC,QAAJ,CAAa,YAAYD,EAAzB,GAAP;EACD,CAFD;;EAIA,MAAM,CAACE,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,GAAD,CAApC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,GAAD,CAA5C;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMW,MAAM,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBJ,QAAtB,KAAmC;IAChD,QAAOA,QAAP;MACE,KAAK,GAAL;QACE,OAAOG,QAAQ,GAAGC,SAAlB;;MACF,KAAK,GAAL;QACE,OAAOD,QAAQ,GAAGC,SAAlB;;MACF,KAAK,GAAL;QACE,OAAOD,QAAQ,GAAGC,SAAlB;;MACF,KAAK,GAAL;QACE,OAAOD,QAAQ,GAAGC,SAAlB;IARJ;EAWD,CAZD,CAVa,CAuBb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B;IAC9C,IAAIA,UAAU,KAAK,KAAnB,EAA0B;MACxB,IAAIC,MAAM,GAAGV,UAAb;MACAC,aAAa,CAACS,MAAM,CAACC,MAAP,CAAcH,UAAd,CAAD,CAAb;IAED,CAL6C,CAM9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD,CAdD;;EAgBA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE,QAAC,OAAD;MAAS,IAAI,EAAER;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,IAAI,EAAEA;IAAf;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,eAAD;MAAiB,YAAY,EAAEO;IAA/B;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAxDQb,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}